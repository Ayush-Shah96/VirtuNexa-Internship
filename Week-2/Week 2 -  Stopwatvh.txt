/*
Goal: Build a Java application that functions as a stopwatch, allowing the user to start, stop, and reset the timer.
*/

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Stopwatch extends JFrame {

    private JLabel timeLabel;
    private JButton startButton, stopButton, resetButton;
    private long startTime, elapsedTime;
    private boolean isRunning;

    public Stopwatch() {
        setTitle("Stopwatch");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(250, 150);
        setLayout(new FlowLayout());

        timeLabel = new JLabel("00:00:00");
        timeLabel.setFont(new Font("Arial", Font.PLAIN, 24));

        startButton = new JButton("Start");
        startButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (!isRunning) {
                    startTime = System.currentTimeMillis();
                    isRunning = true;
                }
            }
        });

        stopButton = new JButton("Stop");
        stopButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (isRunning) {
                    elapsedTime += System.currentTimeMillis() - startTime;
                    isRunning = false;
                }
            }
        });

        resetButton = new JButton("Reset");
        resetButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                elapsedTime = 0;
                timeLabel.setText("00:00:00");
                isRunning = false;
            }
        });

        add(timeLabel);
        add(start
