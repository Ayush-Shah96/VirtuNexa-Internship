/*
Goal: Develop a Java application that reads a text file, analyzes its content, and provides statistics such as word count, line count, character count, and the
most frequently used words.
*/

import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

public class TextAnalyzer {

    public static void main(String[] args) {
        String filePath = "your_text_file.txt"; // Replace with your file path

        try {
            Map<String, Integer> wordFrequency = analyzeText(filePath);
            System.out.println("Word count: " + wordFrequency.size());
            System.out.println("Most frequent word: " + getMostFrequentWord(wordFrequency));
        } catch (FileNotFoundException e) {
            System.err.println("Error: File not found: " + filePath);
        }
    }

    private static Map<String, Integer> analyzeText(String filePath) throws FileNotFoundException {
        Map<String, Integer> wordFrequency = new HashMap<>();
        Scanner scanner = new Scanner(new File(filePath));

        int lineCount = 0;
        int charCount = 0;

        while (scanner.hasNextLine()) {
            lineCount++;
            String line = scanner.nextLine();
            charCount += line.length();

            String[] words = line.toLowerCase().split("\\s+"); // Split into words, ignoring punctuation
            for (String word : words) {
                wordFrequency.put(word, wordFrequency.getOrDefault(word, 0) + 1);
            }
        }

        System.out.println("Line count: " + lineCount);
        System.out.println("Character count: " + charCount);
        scanner.close();

        return wordFrequency;
    }

    private static String getMostFrequentWord(Map<String, Integer> wordFrequency) {
        String mostFrequent = "";
        int maxCount = 0;

        for (Map.Entry<String, Integer> entry : wordFrequency.entrySet()) {
            if (entry.getValue() > maxCount) {
                mostFrequent = entry.getKey();
                maxCount = entry.getValue();
            }
        }

        return mostFrequent;
    }
}
