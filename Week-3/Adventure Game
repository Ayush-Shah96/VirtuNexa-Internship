import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.HashMap;
import java.util.Map;

public class TextAdventureGUI extends JFrame {

    private JTextArea storyArea;
    private JButton[] choiceButtons;
    private Map<Integer, String> storyMap;
    private int currentStoryIndex;

    public TextAdventureGUI() {
        super("Text Adventure");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Initialize story map (example)
        storyMap = new HashMap<>();
        storyMap.put(0, "You find yourself in a dark forest. A path leads north and south. Which way do you go?\n" +
                "1. Go North\n" +
                "2. Go South");
        storyMap.put(1, "You venture north. You encounter a ferocious wolf!\n" +
                "1. Fight the wolf\n" +
                "2. Run away");
        storyMap.put(2, "You head south. You find a hidden cave.\n" +
                "1. Enter the cave\n" +
                "2. Continue south");
        // Add more story parts and choices here...

        // Story Area
        storyArea = new JTextArea(10, 30);
        storyArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(storyArea);
        add(scrollPane, BorderLayout.CENTER);

        // Choice Buttons
        JPanel buttonPanel = new JPanel();
        choiceButtons = new JButton[3]; // Assuming maximum of 3 choices
        for (int i = 0; i < choiceButtons.length; i++) {
            choiceButtons[i] = new JButton("Choice " + (i + 1));
            choiceButtons[i].addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JButton button = (JButton) e.getSource();
                    int choice = Integer.parseInt(button.getText().substring(6)) - 1; // Extract choice number
                    makeChoice(choice);
                }
            });
            buttonPanel.add(choiceButtons[i]);
        }
        add(buttonPanel, BorderLayout.SOUTH);

        // Start the game
        currentStoryIndex = 0;
        updateStory();

        pack();
        setVisible(true);
    }

    private void makeChoice(int choiceIndex) {
        // Determine the next story part based on the choice
        // (This logic will depend on your specific story structure)
        int nextIndex = 0; 
        // Example: 
        if (currentStoryIndex == 0) {
            if (choiceIndex == 0) { // North
                nextIndex = 1;
            } else if (choiceIndex == 1) { // South
                nextIndex = 2;
            }
        } 
        // Add more conditions for other story parts

        currentStoryIndex = nextIndex;
        updateStory();
    }

    private void updateStory() {
        String currentStory = storyMap.get(currentStoryIndex);
        storyArea.setText(currentStory);

        // Enable/disable buttons based on available choices
        for (int i = 0; i < choiceButtons.length; i++) {
            if (i < countChoices(currentStory)) {
                choiceButtons[i].setEnabled(true);
            } else {
                choiceButtons[i].setEnabled(false);
            }
        }
    }

    private int countChoices(String storyText) {
        int count = 0;
        for (char c : storyText.toCharArray()) {
            if (Character.isDigit(c)) {
                count++;
            }
        }
        return count;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new TextAdventureGUI());
    }
}
